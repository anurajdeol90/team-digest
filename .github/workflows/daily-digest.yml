name: Daily Digest

on:
  workflow_dispatch:
    inputs:
      date:
        description: "Date YYYY-MM-DD (optional; default: auto-pick)"
        required: false
        type: string
  # Suggest 14:10 UTC (~9:10am America/Chicago) to allow time for morning commits
  schedule:
    - cron: "10 14 * * 1-5"

jobs:
  daily:
    runs-on: ubuntu-latest
    env:
      LOGS_DIR: logs
      OUTFILE: outputs/daily.md
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install deps
        run: python -m pip install --upgrade pip

      - name: Diagnostics — list logs
        shell: bash
        run: |
          echo "Tracked under logs/:"
          git ls-files "logs/*" || true
          echo
          echo "Directory listing of logs/:"
          ls -la logs || true

      - name: Resolve date (input → today → yesterday → last weekday → latest available)
        id: pick
        shell: bash
        env:
          LOGS_DIR: ${{ env.LOGS_DIR }}
        run: |
          set -euo pipefail
          IN="${{ inputs.date }}"
          have() { [ -f "$LOGS_DIR/notes-$1.md" ]; }

          if [ -n "${IN}" ]; then
            CHOSEN="$IN"; SRC="manual input"
          else
            TODAY=$(date -u +%Y-%m-%d)
            if have "$TODAY"; then
              CHOSEN="$TODAY"; SRC="today (UTC)"
            else
              YEST=$(date -u -d "$TODAY -1 day" +%Y-%m-%d)
              if have "$YEST"; then
                CHOSEN="$YEST"; SRC="yesterday (UTC)"
              else
                DOW=$(date -u +%u)  # 1=Mon..7=Sun
                if [ "$DOW" = "1" ]; then   # Monday: try Friday
                  FRI=$(date -u -d "$TODAY -3 days" +%Y-%m-%d)
                  if have "$FRI"; then CHOSEN="$FRI"; SRC="last weekday (Fri)"; fi
                fi
                if [ -z "${CHOSEN:-}" ]; then
                  LATEST=$(ls -1 "$LOGS_DIR"/notes-*.md 2>/dev/null | sort | tail -n1 || true)
                  if [ -n "$LATEST" ]; then
                    CHOSEN="$(basename "$LATEST" .md | cut -d- -f2-4)"
                    SRC="latest available"
                  fi
                fi
              fi
            fi
          fi

          if [ -z "${CHOSEN:-}" ]; then
            echo "date=unknown" >> "$GITHUB_OUTPUT"
            echo "::warning::No notes-YYYY-MM-DD.md found under $LOGS_DIR"
          else
            echo "date=$CHOSEN" >> "$GITHUB_OUTPUT"
            echo "Chosen date ($SRC): $CHOSEN"
            head -n 20 "$LOGS_DIR/notes-$CHOSEN.md" || true
          fi

      - name: Aggregate daily → daily.md (group + sort)
        shell: bash
        run: |
          mkdir -p outputs
          if [ "${{ steps.pick.outputs.date }}" = "unknown" ]; then
            echo "# Team Digest (no date found)" > "$OUTFILE"
            echo "_No logs present under $LOGS_DIR_" >> "$OUTFILE"
          else
            python scripts/digest_daily.py \
              --logs-dir "$LOGS_DIR" \
              --date "${{ steps.pick.outputs.date }}" \
              --output "$OUTFILE" \
              --title "Team Digest (${{ steps.pick.outputs.date }})" \
              --group-actions \
              --sort-actions "priority,name,text"
          fi
          echo "---- Preview (first 60 lines) ----"
          head -n 60 "$OUTFILE" || true

      - uses: actions/upload-artifact@v4
        with:
          name: daily-digest
          path: ${{ env.OUTFILE }}

      - name: Post to Slack (optional)
        if: env.SLACK_WEBHOOK_URL != ''
        run: python scripts/post_to_slack.py "$OUTFILE"
