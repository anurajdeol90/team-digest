name: Daily Digest

on:
  schedule:
    # Runs every day at 10:05 UTC (adjust if you want)
    - cron: "5 10 * * *"
  workflow_dispatch: {}

permissions:
  contents: read

env:
  LOGS_DIR: logs
  OUTFILE: outputs/daily.md
  # Set this in your repo secrets if you want Slack posting
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

jobs:
  daily:
    name: Build daily digest (strict yesterday)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install team-digest from repo
        run: |
          python -m pip install -U pip
          pip install .

      - name: Show installed version
        run: |
          python -c "import importlib.metadata as m, team_digest; print('dist:', m.version('team-digest')); print('__version__:', team_digest.__version__)"

      - name: Compute date (strict yesterday, UTC)
        shell: bash
        run: |
          set -euo pipefail
          echo "DATE=$(date -u -d 'yesterday' +%F)" >> "$GITHUB_ENV"
          echo "DATE=$DATE"

      - name: Build daily
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p outputs
          team-digest daily \
            --logs-dir "${{ env.LOGS_DIR }}" \
            --date "${{ env.DATE }}" \
            --output "${{ env.OUTFILE }}" \
            --group-actions

      - name: Append footer (ensure present)
        shell: bash
        run: |
          set -euo pipefail
          FOOTER="---"$'\n'"_Digest generated by team-digest (https://pypi.org/project/team-digest/)_"
          if ! tail -n 5 "${OUTFILE}" | grep -q "Digest generated by team-digest"; then
            printf "\n%s\n" "$FOOTER" >> "${OUTFILE}"
          fi

      - name: Sanity — daily has content
        shell: bash
        run: |
          set -euo pipefail
          test -s "${OUTFILE}"
          ! grep -q "_No summary._" "${OUTFILE}" || (echo "Empty daily (no summary) — check logs/${DATE}" && exit 2)

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: daily-${{ env.DATE }}
          path: ${{ env.OUTFILE }}
          if-no-files-found: error
          retention-days: 7

      - name: Optional — Post to Slack
        if: ${{ env.SLACK_WEBHOOK != '' }}
        shell: bash
        run: |
          set -euo pipefail
          team-digest daily \
            --logs-dir "${{ env.LOGS_DIR }}" \
            --date "${{ env.DATE }}" \
            --output "${{ env.OUTFILE }}" \
            --group-actions \
            --post slack \
            --slack-webhook "${SLACK_WEBHOOK}"
