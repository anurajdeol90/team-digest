name: Weekly Digest (schedule)

on:
  schedule:
    # Every Monday 08:00 local time
    - cron: "0 8 * * 1"
  workflow_dispatch:
    inputs:
      input_dir:
        description: "Override INPUT_DIR (repo-relative or absolute)"
        required: false
        default: ""

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: ${{ vars.TZ || 'UTC' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install team-digest
        run: |
          python -m pip install --upgrade pip
          pip install "team-digest>=1.1.6,<2"

      - name: Resolve INPUT_DIR
        env:
          WF_INPUT_DIR: ${{ inputs.input_dir }}
          VAR_DEFAULT_INPUT_DIR: ${{ vars.DEFAULT_INPUT_DIR }}
        run: |
          set -e
          if [ -n "$WF_INPUT_DIR" ]; then
            DIR="$WF_INPUT_DIR"
          elif [ -n "$VAR_DEFAULT_INPUT_DIR" ]; then
            DIR="$VAR_DEFAULT_INPUT_DIR"
          else
            DIR=$(python -c "import pathlib, team_digest; print(pathlib.Path(team_digest.__file__).parent/'examples'/'logs')")
          fi
          echo "INPUT_DIR=$DIR" >> "$GITHUB_ENV"
          echo "Resolved INPUT_DIR=$DIR"

      - name: Generate weekly digest (Mon–Sun of prior week)
        run: |
          set -e
          # Most recent Monday (on Monday, GNU date's 'last monday' may be today; adjust 7 days back)
          START=$(TZ="$TZ" date -d 'last monday' +%Y-%m-%d)
          TODAY_DOW=$(TZ="$TZ" date +%u)  # 1=Mon..7=Sun
          if [ "$TODAY_DOW" = "1" ]; then
            START=$(TZ="$TZ" date -d "$START -7 days" +%Y-%m-%d)
          fi
          END=$(TZ="$TZ" date -d "$START +6 days" +%Y-%m-%d)

          mkdir -p outputs
          team-digest --input "$INPUT_DIR" --format md --from "$START" --to "$END" -o outputs/weekly.md
          echo "Range: $START → $END"
          echo '---- Preview (first 60 lines) ----'; head -n 60 outputs/weekly.md || true

      - name: Post to Slack (if webhook is set)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          set -e
          WEBHOOK="${SLACK_WEBHOOK_URL:-$SLACK_WEBHOOK}"
          if [ -n "$WEBHOOK" ]; then
            PAYLOAD=$(jq -Rs --arg pre '```' '{text: ($pre + . + $pre)}' < outputs/weekly.md)
            curl -fsSL -H 'Content-Type: application/json' --data-raw "$PAYLOAD" "$WEBHOOK"
            echo "Posted to Slack."
          else
            echo "No Slack webhook configured; skipping post."
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: weekly-digest
          path: outputs/**
