name: Weekly Digest (schedule)

on:
  schedule:
    # Every Monday 08:00 local time
    - cron: "0 8 * * 1"
  workflow_dispatch:
    inputs:
      input_dir:
        description: "Override INPUT_DIR (repo-relative or absolute)"
        required: false
        type: string

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      TZ: ${{ vars.DIGEST_TZ || 'UTC' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install team-digest
        run: |
          python -m pip install --upgrade pip
          pip install "team-digest>=1.1.6,<2"

      - name: Resolve INPUT_DIR and optional config
        run: |
          set -e
          CAND="${{ inputs.input_dir }}"
          if [ -z "$CAND" ] && [ -n "${{ vars.DEFAULT_INPUT_DIR }}" ]; then
            CAND="${{ vars.DEFAULT_INPUT_DIR }}"
          fi

          if [ -n "$CAND" ] && [ -d "$GITHUB_WORKSPACE/$CAND" ]; then
            INPUT_DIR="$GITHUB_WORKSPACE/$CAND"
          elif [ -n "$CAND" ] && [ -d "$CAND" ]; then
            INPUT_DIR="$CAND"
          else
            INPUT_DIR=$(python - <<'PY'
import pathlib, team_digest
print(pathlib.Path(team_digest.__file__).parent/'examples'/'logs')
PY
)
          fi

          echo "Resolved INPUT_DIR=$INPUT_DIR"
          echo "INPUT_DIR=$INPUT_DIR" >> "$GITHUB_ENV"

          CFG="${{ vars.DIGEST_CONFIG }}"
          if [ -n "$CFG" ]; then
            if [ -f "$GITHUB_WORKSPACE/$CFG" ]; then CFG="$GITHUB_WORKSPACE/$CFG"; fi
            if [ -f "$CFG" ]; then
              echo "Using DIGEST_CONFIG=$CFG"
              echo "DIGEST_CONFIG=$CFG" >> "$GITHUB_ENV"
            fi
          fi

      - name: Generate & post weekly digest
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL || secrets.SLACK_WEBHOOK }}
        run: |
          set -e
          mkdir -p outputs
          team-digest --input "$INPUT_DIR" --format md ${DIGEST_CONFIG:+--config "$DIGEST_CONFIG"} -o outputs/weekly.md
          echo '---- Preview (first 60 lines) ----'; head -n 60 outputs/weekly.md || true
          if [ -n "$SLACK_WEBHOOK" ]; then
            PAYLOAD=$(jq -Rs --arg pre '```' '{text: ($pre + . + $pre)}' < outputs/weekly.md)
            curl -fsSL -H 'Content-Type: application/json' --data-raw "$PAYLOAD" "$SLACK_WEBHOOK"
          else
            echo "SLACK_WEBHOOK not setâ€”skipping Slack post."
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: weekly-digest
          path: outputs/**
