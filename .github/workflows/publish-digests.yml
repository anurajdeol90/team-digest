name: Publish Digests to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "outputs/*.md"
      - "site/**"
      - ".github/workflows/publish-digests.yml"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-publish
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Build static site (copy site, copy digests, make viewer+index)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p public

          # 1) Copy any static site assets (optional folder)
          if [ -d site ]; then
            cp -r site/* public/ 2>/dev/null || true
          fi

          # 2) Copy raw digests if any
          if [ -d outputs ]; then
            cp -r outputs/* public/ || true
          fi

          # 3) Build digests.js (cadence + date parsed from filenames)
          : > public/digests.js
          echo "window.digests = [" >> public/digests.js
          if ls outputs/*.md >/dev/null 2>&1; then
            first=1
            for f in $(ls -1 outputs/*.md | xargs -n1 basename | sort -r); do
              cadence="unknown"
              case "$f" in
                daily_*.md) cadence="daily" ;;
                weekly_*.md) cadence="weekly" ;;
                monthly_*.md) cadence="monthly" ;;
              esac
              date="${f%.md}"; date="${date#*_}"
              [ "$first" -eq 1 ] || echo "," >> public/digests.js
              first=0
              printf '  {"file":"%s","cadence":"%s","date":"%s"}' "$f" "$cadence" "$date" >> public/digests.js
            done
            echo "" >> public/digests.js
          fi
          echo "];" >> public/digests.js

          # 4) Lightweight Markdown viewer (client-side)
          cat > public/viewer.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1">
          <title>Digest Viewer</title>
          <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/water.css@2/out/water.css">
          <main id="app"><p>Loading…</p></main>
          <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
          <script>
            const params = new URLSearchParams(location.search);
            const file = params.get("file");
            const app = document.getElementById("app");
            if (!file) {
              app.innerHTML = "<h1>No file provided</h1><p>Use ?file=FILENAME.md</p>";
            } else {
              fetch(file).then(r => {
                if (!r.ok) throw new Error("Failed to load " + file);
                return r.text();
              }).then(md => {
                document.title = file + " — Team Digest";
                app.innerHTML = marked.parse(md);
              }).catch(e => {
                app.innerHTML = "<h1>Error</h1><pre>"+e+"</pre>";
              });
            }
          </script>
          HTML

          # 5) Index page with search & cadence filter
          cat > public/index.html <<'HTML'
          <!doctype html>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1">
          <title>Team Digests</title>
          <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/water.css@2/out/water.css">
          <main style="max-width:860px;margin:40px auto;">
            <h1>Team Digests</h1>
            <p>Search or filter by cadence. Click a result to view the rendered digest; “raw” opens the original Markdown.</p>
            <div style="display:flex; gap:.5rem; align-items:center; margin:.75rem 0;">
              <input id="q" placeholder="Search filename (e.g., weekly_2025-10-06)" style="flex:1">
              <select id="cadence">
                <option value="">All cadences</option>
                <option value="daily">Daily</option>
                <option value="weekly">Weekly</option>
                <option value="monthly">Monthly</option>
              </select>
            </div>
            <ul id="list"></ul>
          </main>
          <script src="./digests.js"></script>
          <script>
            const list = document.getElementById('list');
            const q = document.getElementById('q');
            const sel = document.getElementById('cadence');

            function render() {
              const term = q.value.trim().toLowerCase();
              const cad = sel.value;
              const items = (window.digests || []).filter(d => {
                const okName = !term || d.file.toLowerCase().includes(term);
                const okCad = !cad || d.cadence === cad;
                return okName && okCad;
              });
              list.innerHTML = items.map(d => {
                const url = `viewer.html?file=${encodeURIComponent(d.file)}`;
                return `<li><a href="${url}">${d.file}</a> — <small>${d.date}</small>
                        &nbsp; <small>(<a href="./${d.file}">raw</a>)</small>
                        &nbsp; <span style="border:1px solid #999;border-radius:.5rem;padding:.05rem .35rem;font-size:.8em;">${d.cadence}</span>
                        </li>`;
              }).join('') || '<li>No digests found.</li>';
            }
            q.addEventListener('input', render);
            sel.addEventListener('change', render);
            render();
          </script>
          HTML

          # 6) Bypass Jekyll and show final listing
          touch public/.nojekyll
          echo "=== public listing ==="
          ls -la public

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
