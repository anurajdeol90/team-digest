name: Publish Digests to GitHub Pages

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - "outputs/*.md"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages-publish
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Build site (copy md, add viewer, build index)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p public

          # 1) Copy digests if any (keep raw .md files)
          if [ -d outputs ]; then
            cp -r outputs/* public/ || true
          fi

          # 2) Create a simple Markdown viewer (client-side render with marked.js)
          : > public/viewer.html
          echo '<!doctype html>'                                   >> public/viewer.html
          echo '<meta charset="utf-8">'                            >> public/viewer.html
          echo '<meta name="viewport" content="width=device-width, initial-scale=1">' >> public/viewer.html
          echo '<title>Digest Viewer</title>'                      >> public/viewer.html
          echo '<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/water.css@2/out/water.css">' >> public/viewer.html
          echo '<main id="app"><p>Loading…</p></main>'             >> public/viewer.html
          echo '<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>' >> public/viewer.html
          echo '<script>'                                           >> public/viewer.html
          echo '  const params = new URLSearchParams(location.search);' >> public/viewer.html
          echo '  const file = params.get("file");'                 >> public/viewer.html
          echo '  const app = document.getElementById("app");'      >> public/viewer.html
          echo '  if (!file) { app.innerHTML = "<h1>No file provided</h1><p>Use ?file=FILENAME.md</p>"; }' >> public/viewer.html
          echo '  else fetch(file).then(r => {'                     >> public/viewer.html
          echo '    if (!r.ok) throw new Error("Failed to load "+file);' >> public/viewer.html
          echo '    return r.text();'                               >> public/viewer.html
          echo '  }).then(md => {'                                  >> public/viewer.html
          echo '    document.title = file + " — Team Digest";'      >> public/viewer.html
          echo '    app.innerHTML = marked.parse(md);'              >> public/viewer.html
          echo '  }).catch(e => {'                                  >> public/viewer.html
          echo '    app.innerHTML = "<h1>Error</h1><pre>"+e+"</pre>";' >> public/viewer.html
          echo '  });'                                              >> public/viewer.html
          echo '</script>'                                          >> public/viewer.html

          # 3) Build index linking to viewer.html (newest first) + raw .md link
          : > public/index.html
          echo '<!doctype html>'                                    >> public/index.html
          echo '<meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1">' >> public/index.html
          echo '<title>Team Digests</title>'                        >> public/index.html
          echo '<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/water.css@2/out/water.css">' >> public/index.html
          echo '<h1>Team Digests</h1>'                              >> public/index.html
          echo '<p>Browse recent digests below.</p>'                >> public/index.html
          echo '<ul>'                                               >> public/index.html
          if ls outputs/*.md >/dev/null 2>&1; then
            for f in $(ls -1 outputs/*.md | xargs -n1 basename | sort -r); do
              html="viewer.html?file=$f"
              echo "<li><a href=\"./$html\">$f</a> &nbsp; <small>(<a href=\"./$f\">raw .md</a>)</small></li>" >> public/index.html
            done
          else
            echo '<li>No digests found yet.</li>'                   >> public/index.html
          fi
          echo '</ul>'                                              >> public/index.html

          # Serve files as-is and print listing
          touch public/.nojekyll
          echo "=== public listing ==="
          ls -la public

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
