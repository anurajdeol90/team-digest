name: CI

on:
  push:
  pull_request:

jobs:
  smoke:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip build

      - name: Clean and build wheel + sdist
        run: |
          rm -rf dist build *.egg-info || true
          python -m build
          ls -la dist

      - name: Verify wheel contains package + examples (diagnostics)
        run: |
          set -euo pipefail
          python - <<'PY'
          import zipfile, glob, sys, textwrap
          whls = sorted(glob.glob("dist/*.whl"))
          if not whls:
              print("ERROR: No wheel found in dist/. Did build step run?")
              sys.exit(1)
          w = whls[-1]
          print("Wheel:", w)
          with zipfile.ZipFile(w) as z:
              names = z.namelist()
          has_pkg = any(n.startswith("team_digest/__init__.py") for n in names)
          ex = [n for n in names if n.startswith("team_digest/examples/")]
          print("Has team_digest package:", has_pkg)
          print("Example entries (first 10):\n", textwrap.indent("\n".join(ex[:10]), "  "))
          if not has_pkg or not ex:
              print("\n--- DIAGNOSTICS ---")
              print("Ensure BOTH of the following are true:")
              print("  1) team_digest/examples/logs/sample.md is committed in the repo")
              print('  2) pyproject.toml has:\n     [tool.setuptools.package-data]\n     team_digest = ["examples/**"]')
              sys.exit(1)
          print("✅ Wheel includes package + examples")
          PY

      - name: Create isolated venv and install from wheel
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install --no-cache-dir dist/*.whl
          python -c "import team_digest, pathlib; print('Installed at:', pathlib.Path(team_digest.__file__).parent)"

      - name: Resolve packaged examples (robust output)
        id: logs
        run: |
          set -euo pipefail
          source .venv/bin/activate
          python - <<'PY' | tee logs_path.txt
          import importlib.resources as r, team_digest, sys
          root = r.files(team_digest) / "examples" / "logs"
          print("Resolved example dir:", root)
          try:
            contents = [p.name for p in root.iterdir()]
          except Exception as e:
            print("ERROR: Could not list example dir:", e)
            sys.exit(1)
          print("Contents:", contents)
          if not contents:
            print("ERROR: Example dir is empty; confirm sample.md is packaged.")
            sys.exit(1)
          # Emit only the path on the last line for downstream steps
          print(root.__fspath__())
          PY

      - name: Render outputs from examples
        run: |
          set -euo pipefail
          source .venv/bin/activate
          mkdir -p out
          logs_path="$(tail -n 1 logs_path.txt)"
          team-digest --version
          team-digest --input "$logs_path" --format md   --output out/digest.md
          team-digest --input "$logs_path" --format json --output out/digest.json
          test -s out/digest.md
          test -s out/digest.json
          echo "✅ Rendered out/digest.md and out/digest.json"

      - name: Upload artifacts (digest outputs)
        uses: actions/upload-artifact@v4
        with:
          name: digest-outputs
          path: out/
          if-no-files-found: error
