name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install pre-commit

      - name: Run pre-commit on all files
        run: |
          git config --global core.autocrlf input
          pre-commit run --all-files --show-diff-on-failure

  test:
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install build & test deps
        run: |
          python -m pip install --upgrade pip
          python -m pip install build pytest pytest-cov twine pip-audit

      - name: Build sdist + wheel
        run: python -m build

      - name: Sanity check wheel contents
        run: python scripts/check_examples.py

      - name: Twine metadata check
        run: twine check dist/*

      - name: Install built wheel
        run: pip install dist/*.whl

      - name: Show installed package info
        run: |
          python - <<'PY'
          import importlib, sys
          import team_digest
          print("team_digest version:", getattr(team_digest, "__version__", "n/a"))
          m = importlib.import_module("team_digest.team_digest_runtime")
          print("runtime module:", m.__file__)
          from importlib import resources
          try:
              files = list(resources.files("team_digest").joinpath("examples").rglob("*"))
              print("examples packaged:", len(files))
          except Exception as e:
              print("examples listing error:", e, file=sys.stderr)
          PY

      - name: List wheel contents (debug)
        run: |
          python - <<'PY'
          import glob, zipfile
          wh = sorted(glob.glob("dist/*.whl"))[0]
          print("Inspecting:", wh)
          with zipfile.ZipFile(wh) as z:
              for n in sorted(z.namelist()):
                  if n.startswith("team_digest/"):
                      print(n)
          PY

      - name: Run tests with coverage (verbose)
        run: pytest -vv --cov=team_digest --cov-report=xml
