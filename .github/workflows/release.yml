name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write  # required for trusted publishing

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build package (sdist + wheel)
        run: python -m build

      - name: Sanity check wheel contents
        run: python scripts/check_examples.py

      - name: Check if this version already exists on PyPI
        id: check_pypi
        run: |
          python - <<'PY'
          import os, re, json, pathlib, urllib.request
          ver = None
          text = pathlib.Path("src/team_digest/__init__.py").read_text(encoding="utf-8")
          m = re.search(r'__version__\s*=\s*[\'"]([^\'"]+)[\'"]', text)
          if m:
              ver = m.group(1)
          print("Local version:", ver)
          exists = False
          if ver:
              try:
                  with urllib.request.urlopen("https://pypi.org/pypi/team-digest/json", timeout=10) as r:
                      data = json.load(r)
                  exists = ver in (data.get("releases") or {})
              except Exception as e:
                  print("NOTE: PyPI lookup failed (will attempt publish):", e)
          # expose as step output
          with open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8") as f:
              f.write(f"exists={str(exists).lower()}\n")
          PY

      - name: Skip notice (version already on PyPI)
        if: steps.check_pypi.outputs.exists == 'true'
        run: echo "Version already on PyPI; skipping publish."

      - name: Publish to PyPI
        if: steps.check_pypi.outputs.exists != 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
